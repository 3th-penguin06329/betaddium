plugins {
    id 'java-library'
    id 'maven-publish'
}

dynamicProject {
    runtime("${project.minecraft_version}-${project.neoform_version}",
            project.layout.projectDirectory.dir('patches'),
            project.layout.projectDirectory.dir('rejects'))
}

sourceSets {
    main {
        java {
            srcDirs project.file("stubSrc")
        }
    }
}

repositories {
    maven {
        // RetroFuturaGradle
        name "GTNH Maven"
        url "https://nexus.gtnewhorizons.com/repository/public/"
        mavenContent {
            includeGroup("com.gtnewhorizons")
            includeGroupByRegex("com\\.gtnewhorizons\\..+")
        }
    }
}

dependencies {
    api "org.ow2.asm:asm:${project.asm_version}"
    api "org.ow2.asm:asm-commons:${project.asm_version}"
    api "org.ow2.asm:asm-tree:${project.asm_version}"
    api "org.ow2.asm:asm-util:${project.asm_version}"
    api "org.ow2.asm:asm-analysis:${project.asm_version}"

    api("net.fabricmc:sponge-mixin:${project.mixin_version}") { transitive = false }
    api("net.neoforged:bus:${project.eventbus_version}")
    api("io.github.llamalad7:mixinextras-common:${project.mixin_extras_version}")

    api("org.apache.maven:maven-artifact:${project.apache_maven_artifact_version}")
    api("net.neoforged:neoforgespi:${project.spi_version}")
    api("cpw.mods:modlauncher:${project.modlauncher_version}")

    implementation("com.gtnewhorizons.retrofuturabootstrap:RetroFuturaBootstrap:1.0.2")
}

installerProfile {
    profile = 'EmbeddiumPhi'
}

minecraft {
    accessTransformers {
        file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')
    }
}

tasks.withType(GenerateModuleMetadata).configureEach { enabled = false }

minecraft {
    modIdentifier 'minecraft'
}