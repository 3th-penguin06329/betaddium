--- a/net/minecraft/client/resources/model/BakedModel.java
+++ b/net/minecraft/client/resources/model/BakedModel.java
@@ -2,6 +_,8 @@
 
 import java.util.List;
 import javax.annotation.Nullable;
+
+import net.minecraft.client.renderer.RenderType;
 import net.minecraft.client.renderer.block.model.BakedQuad;
 import net.minecraft.client.renderer.block.model.ItemOverrides;
 import net.minecraft.client.renderer.block.model.ItemTransforms;
@@ -15,6 +_,22 @@
 @OnlyIn(Dist.CLIENT)
 public interface BakedModel {
     List<BakedQuad> getQuads(@Nullable BlockState p_235039_, @Nullable Direction p_235040_, RandomSource p_235041_);
+
+    default List<BakedQuad> getQuads(@Nullable BlockState p_235039_, @Nullable Direction p_235040_, RandomSource p_235041_, net.neoforged.neoforge.client.model.data.ModelData data, net.minecraft.client.renderer.RenderType renderType) {
+        return getQuads(p_235039_, p_235040_, p_235041_);
+    }
+
+    default net.neoforged.neoforge.common.util.TriState useAmbientOcclusion(BlockState state, net.neoforged.neoforge.client.model.data.ModelData data, RenderType type) {
+        return useAmbientOcclusion() ? net.neoforged.neoforge.common.util.TriState.DEFAULT : net.neoforged.neoforge.common.util.TriState.FALSE;
+    }
+
+    default net.neoforged.neoforge.client.model.data.ModelData getModelData(net.minecraft.world.level.BlockAndTintGetter blockAndTintGetter, net.minecraft.core.BlockPos blockPos, BlockState blockState, net.neoforged.neoforge.client.model.data.ModelData modelData) {
+        return modelData;
+    }
+
+    default net.neoforged.neoforge.client.ChunkRenderTypeSet getRenderTypes(BlockState state, RandomSource source, net.neoforged.neoforge.client.model.data.ModelData modelData) {
+        return net.minecraft.client.renderer.ItemBlockRenderTypes.getRenderLayers(state);
+    }
 
     boolean useAmbientOcclusion();
 
